#!/usr/bin/python3
"""
This engine is in charge of serial/unserial objects to files
"""
import json
import os


class FileStorage():
    """
    Serialize python data to a JSON file and Deserializes
    JSON file to python data.
    """
    __file_path = "file.json"
    __objects = {}

    def all(self):
        """ returns the dictionary '__objects' """
        return (FileStorage.__objects)

    def new(self, obj):
        """ Create a new object """
        class_name = type(obj).__name__
        my_id = obj.id
        key = class_name + "." + my_id
        FileStorage.__objects[key] = obj

    def save(self):
        """ Serializes '__objects' to the JSON file """
        obj_dict = {}
        for key in FileStorage.__objects:
            obj_dict[key] = FileStorage.__objects[key].to_dict()
        with open(FileStorage.__file_path, 'w') as file_path:
            json.dump(obj_dict, file_path)

    def reload(self):
        """ Load from JSON file """
        if not os.path.isfile(FileStorage.__file_path):
            return
        with open(FileStorage.__file_path, "r") as file_path:
            objects = json.load(file_path)
            FileStorage.__objects = {}
            for key in objects:
                name = key.split(".")[0]
                FileStorage.__objects[key] = my_dict[name](**objects[key])
